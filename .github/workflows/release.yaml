name: "release"

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      minimum-hsk-level: 1
      maximum-hsk-level: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        id: install-python
        uses: actions/setup-python@v5
        with:
          python-version: ">= 3.11"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      - name: Load Cached Poetry Virtual Environment
        id: load-cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ steps.install-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Python Dependencies
        if: steps.load-cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install Typst
        run: sudo snap install typst
      - name: Generate Artifacts
        run: ./release.sh ${{ env.minimum-hsk-level }} ${{ env.maximum-hsk-level }}
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload CSV Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./output/hsk.csv.zip
          asset_name: hsk_${{ env.minimum-hsk-level }}-${{ env.maximum-hsk-level }}.csv.zip
          asset_content_type: application/zip
      - name: Upload PDF Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./output/hsk.pdf.zip
          asset_name: hsk_${{ env.minimum-hsk-level }}-${{ env.maximum-hsk-level }}.pdf.zip
          asset_content_type: application/pdf
